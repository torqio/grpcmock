// Code generated by protoc-gen-grpcmock. DO NOT EDIT.

package main

import (
	"log"
	"net"
	"fmt"

	"google.golang.org/grpc"
)

func main() {
    srv := grpc.NewServer()

    {{ range $f := .Files }}
    fmt.Println("hello {{ $f.GeneratedFilenamePrefix }}")
    {{- if not $f.Generate }}
    fmt.Println("continue")
    {{continue}}
    {{- end }}
    {{- $i := 0 }}
    {{ range $svc := $f.Services }}
    fmt.Println("hello svc {{ $svc.GoName }}")
    m{{ $i }}, err := {{ qualifiedIdentCustom $f.GoImportPath (printf "New%sMockServer" $svc.GoName) }}("/stubs")
	if err != nil {
		log.Fatalf("Failed creating new {{ $svc.GoName }} mock server: %v\n", err)
	}
	{{ $f.GoPackageName }}.Register{{ $svc.GoName }}Server(srv, m{{ $i }})
	{{- $i = add1 $i }}
    {{ end }}
    {{- end }}

	lis, err := net.Listen("tcp", ":8081")
	if err != nil {
		log.Fatalf("Failed listening: %v\n", err)
	}

	log.Println("Starting")
	if err = srv.Serve(lis); err != nil {
		log.Fatalf("gRPC server failed: %v\n", err)
	}
}
